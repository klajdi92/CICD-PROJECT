pipeline {
    agent any
    environment {
        VERSION = "${env.BUILD_ID}"
    }


    stages {

        stage('Sonar quality check') {
            agent {
                docker {
                    image  'maven'
                }
            }
            steps {
                script {

                    withSonarQubeEnv(credentialsId: 'sonar-tokenss') {

                        sh 'mvn clean package sonar:sonar'

                 }
                }
            }

        }

        stage('Sonar quality gate status') {
            steps {
                script {

                   waitForQualityGate abortPipeline: false, credentialsId: 'sonar-tokenss'
                }
            }

        }

        stage('docker build & docker push to Nexus repo') {
            steps {
                script {

                    withCredentials([string(credentialsId: 'nexus_password', variable: 'nexus_creds')]) {

                    sh'''
                      docker build -t 34.133.53.145:8083/springapp:${VERSION} .

                      docker login -u admin -p $nexus_creds 34.133.53.145:8083
                      
                      docker push 34.133.53.145:8083/springapp:${VERSION}

                      docker rmi 34.133.53.145:8083/springapp:${VERSION}
                    '''
                    }

                }
            }

        }

        stage('Identify misconfigs using datree in helm charts'){

            steps{

                script{
                    dir('kubernetes/myapp/') {
                        withEnv(['DATREE_TOKEN=9928350c-015e-445d-9fcc-cfc8bcf07803']) {
                          sh 'helm datree test .'
                          }
                  }
                }
            }

        }

    }

    post {
		  always {
			mail bcc: '', body: "<br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", cc: '', charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "${currentBuild.result} CI: Project name -> ${env.JOB_NAME}", to: "in.futurekb@gmail.com";  
		}
	}

}
